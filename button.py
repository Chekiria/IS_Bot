from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.utils.markdown import text
import keyboards as kb

from config_for_button import TOKEN
import sqlite3 as lite
import sys
import time

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)



@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç!", reply_markup=kb.great_kb)

@dp.message_handler(commands=['hi1'])
async def process_hi1_command(message: types.Message):
    await message.reply("–ü–µ—Ä–≤–æ–µ - –∏–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã", reply_markup=kb.great_kb1)


@dp.message_handler(commands=['hi2'])
async def process_hi2_command(message: types.Message):
    await message.reply("–ñ–µ–Ω—è —ñ –°–∞–Ω—è, —Ç–∞—Ç–∫–æ –í–∞—Å –∫–æ—Ö–∞—î!!!)))", reply_markup=kb.great_kb2)


@dp.message_handler(commands=['hi3'])
async def process_hi3_command(message:types.Message):
    await message.reply("–¢—Ä–µ—Ç—å–µ - –¥–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ –∫–Ω–æ–ø–æ–∫", reply_markup=kb.markup3)


@dp.message_handler(commands=['hi4'])
async def process_hi4_command(message: types.Message):
    await message.reply("–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ - —Ä–∞—Å—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥", reply_markup=kb.markup4)


@dp.message_handler(commands=['hi5'])
async def process_hi5_command(message: types.Message):
    await message.reply("–ü—è—Ç–æ–µ - –¥–æ–±–∞–≤–ª—è–µ–º —Ä—è–¥—ã –∫–Ω–æ–ø–æ–∫", reply_markup=kb.markup5)


@dp.message_handler(commands=['hi6'])
async def process_hi6_command(message:types.Message):
    await message.reply("–®–µ—Å—Ç–æ–µ - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é\n–≠—Ç–∏ –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –Ω–µ –∑–∞–≤–∏—Å—è—Ç –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞", reply_markup=kb.markup_request)


@dp.message_handler(commands=['hi7'])
async def process_hi7_command(message: types.Message):
    await message.reply('–°–µ–¥—å–º–æ–µ - –≤—Å–µ –º–µ—Ç–æ–¥—ã –≤–º–µ—Å—Ç–µ', reply_markup=kb.markup_big)

@dp.message_handler(commands=['rm'])
async def process_rm_command(message: types.Message):
    await message.reply("–£–±–∏—Ä–∞–µ–º —à–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π", reply_markup=kb.ReplyKeyboardRemove())


@dp.message_handler(commands=['1'])
async def process_command_1(message: types.Message):
    await message.reply('First inline button', reply_markup=kb.inline_kb1)


@dp.callback_query_handler(func=lambda c: c.data == 'button1')
async def process_callback_button1(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, 'Turn first button!!')


@dp.callback_query_handler(func=lambda c: c.data and c.data.startswith('btn'))
async def process_callback_kb1btn1(callback_query: types.CallbackQuery):
    code = callback_query.data[-1]
    if code.isdigit():
        code = int(code)
    if code == 2:
        await bot.answer_callback_query(callback_query.id, text='–ù–∞–∂–∞—Ç–∞ –≤—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞')
    elif code == 5:
        await bot.answer_callback_query(
            callback_query.id,
            text='–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å –Ω–æ–º–µ—Ä–æ–º 5.\n–ê —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–æ–π –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤ üòâ', show_alert=True)
    else:
        await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, f'–ù–∞–∂–∞—Ç–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞! code={code}')

@dp.message_handler(commands=['2'])
async def process_command_2(message: types.Message):
    await message.reply("–û—Ç–ø—Ä–∞–≤–ª—è—é –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏", reply_markup=kb.inline_kb_full)


help_message = text(
    "–≠—Ç–æ —É—Ä–æ–∫ –ø–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º.",
    "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n",
    "/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
    "\n–®–∞–±–ª–æ–Ω—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä:",
    "/hi1 - –∞–≤—Ç–æ —Ä–∞–∑–º–µ—Ä",
    "/hi2 - —Å–∫—Ä—ã—Ç—å –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è",
    "/hi3 - –±–æ–ª—å—à–µ –∫–Ω–æ–ø–æ–∫",
    "/hi4 - –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥",
    "/hi5 - –±–æ–ª—å—à–µ —Ä—è–¥–æ–≤",
    "/hi6 - –∑–∞–ø—Ä–æ—Å –ª–æ–∫–∞—Ü–∏–∏ –∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
    "/hi7 - –≤—Å–µ –º–µ—Ç–æ–¥—ã"
    "/rm - —É–±—Ä–∞—Ç—å —à–∞–±–ª–æ–Ω—ã",
    "\n–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:",
    "/1 - –ø–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞",
    "/2 - —Å—Ä–∞–∑—É –º–Ω–æ–≥–æ –∫–Ω–æ–ø–æ–∫",
    sep="\n"
)


@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.reply(help_message)


##########################################################################################################

#first_answer = text('–î–∞–≤–∞–π —Ä–∞—Å—á–∏—Ç–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏?')




@dp.message_handler(commands=['c'])



async def sp_oscpv(message: types.Message):
   # await message.reply(first_answer)
    await message.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=kb.start_menu)

    #await message.reply('–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ —Å—Ä–µ–¥—Å—Ç–≤–∞', reply_markup=kb.car_type)
    sp.clear()

def koef_message(code, k):
    mes = f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {code}, –∫–æ–µ—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç - {k}'
    return mes

sp = []

@dp.callback_query_handler(func=lambda c: c.data)# and c.data.startswith('btn'))
async def choose_car_type(callback_query: types.CallbackQuery):
    code = callback_query.data[0:]
    #k1 = 0
    if code == 'calc':
        await bot.send_message(callback_query.from_user.id,'–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ —Å—Ä–µ–¥—Å—Ç–≤–∞', reply_markup=kb.car_type)

    if code == 'A1':
        k = 0.34
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.gorod)
        save_k(k)
        print (sp)
    elif code == 'A2':
        k = 0.68
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.gorod)
        save_k(k)
        print(sp)
    elif code == 'B1':
        k = 1
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.gorod)
        save_k(k)
        print(sp)
    elif code == 'B2':
        k = 1.14
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.gorod)
        save_k(k)
        print(sp)
    elif code == 'B3':
        k = 1.18
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.gorod)
        save_k(k)
        print(sp)
    elif code == 'B4':
        k = 1.82
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.gorod)
        save_k(k)
        print(sp)
    elif code == 'C1':
        k = 2
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.gorod)
        save_k(k)
        print(sp)
    elif code == 'C2':
        k = 2.18
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.gorod)
        save_k(k)
        print(sp)
    elif code == 'D1':
        k = 2.55
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.gorod)
        save_k(k)
        print(sp)
    elif code == 'D2':
        k = 3
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.gorod)
        save_k(k)
        print(sp)
    elif code == 'E1':
        k = 0.34
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.gorod)
        save_k(k)
        print(sp)
    elif code == 'E2':
        k = 0.5
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.gorod)
        save_k(k)
        print(sp)


    elif code == 'Kyiv':
        k = 3.9
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.sfera)
        save_k(k)
        print(sp)
    elif code == 'Kyiv_obl':
        k = 2
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.sfera)
        save_k(k)
        print(sp)
    elif code == 'bolee_mln':
        k = 2.8
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.sfera)
        save_k(k)
        print(sp)
    elif code == 'g500_1000':
        k = 2.3
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.sfera)
        save_k(k)
        print(sp)
    elif code == 'g100_500':
        k = 1.7
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.sfera)
        save_k(k)
        print(sp)
    elif code == 'menee_100':
        k = 1
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.sfera)
        save_k(k)
        print(sp)
    elif code == 'eurobliahi':
        k = 3
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°', reply_markup=kb.sfera)
        save_k(k)
        print(sp)


    elif code == 'f_non_taxi':
        k = 1
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ —Å—Ç–∞–∂', reply_markup=kb.staz)
        save_k(k)
        print(sp)
    elif code == 'u_non_taxi':
        k = 1.1
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ —Å—Ç–∞–∂', reply_markup=kb.staz)
        save_k(k)
        print(sp)
    elif code == 'gruz':
        k = 1
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ —Å—Ç–∞–∂', reply_markup=kb.staz)
        save_k(k)
        print(sp)
    elif code == 'f_taxi':
        k = 1.1
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ —Å—Ç–∞–∂', reply_markup=kb.staz)
        save_k(k)
        print(sp)
    elif code == 'f_taxi':
        k = 1.2
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ —Å—Ç–∞–∂', reply_markup=kb.staz)
        save_k(k)
        print(sp)

    elif code == 'do_3':
        k = 1.75
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –ø–µ—Ä–∏–æ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è', reply_markup=kb.period)
        save_k(k)
        print(sp)
    elif code == 'ot_3':
        k = 1.35
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –ø–µ—Ä–∏–æ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è', reply_markup=kb.period)
        save_k(k)
        print(sp)
    elif code == 'ul':
        k = 1.2
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –ø–µ—Ä–∏–æ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è', reply_markup=kb.period)
        save_k(k)
        print(sp)


    elif code == 'god':
        k = 1
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–ë—ã–ª–∏ –ª–∏ —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞–ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≥–æ–¥–∞?', reply_markup=kb.strah_sob)
        save_k(k)
        print(sp)
    elif code == 'mes_11':
        k = 0.95
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–ë—ã–ª–∏ –ª–∏ —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞–ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≥–æ–¥–∞?', reply_markup=kb.strah_sob)
        save_k(k)
        print(sp)
    elif code == 'mes_10':
        k = 0.9
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–ë—ã–ª–∏ –ª–∏ —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞–ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≥–æ–¥–∞?', reply_markup=kb.strah_sob)
        save_k(k)
        print(sp)
    elif code == 'mes_9':
        k = 0.85
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–ë—ã–ª–∏ –ª–∏ —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞–ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≥–æ–¥–∞?', reply_markup=kb.strah_sob)
        save_k(k)
        print(sp)
    elif code == 'mes_8':
        k = 0.8
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–ë—ã–ª–∏ –ª–∏ —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞–ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≥–æ–¥–∞?', reply_markup=kb.strah_sob)
        save_k(k)
        print(sp)
    elif code == 'mes_7':
        k = 0.75
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–ë—ã–ª–∏ –ª–∏ —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞–ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≥–æ–¥–∞?', reply_markup=kb.strah_sob)
        save_k(k)
        print(sp)
    elif code == 'mes_6':
        k = 0.7
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–ë—ã–ª–∏ –ª–∏ —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞–ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≥–æ–¥–∞?', reply_markup=kb.strah_sob)
        save_k(k)
        print(sp)


    elif code == 'ss':
        k = 2
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–ü–æ–¥—Å—á–µ—Ç —Å—Ç—Ä–∞—Ö–æ–≤–æ–π –ø—Ä–µ–º–∏–∏',reply_markup=kb.sp)
        save_k(k)
        print(sp)
    elif code == 'non_ss':
        k = 1
        await bot.send_message(callback_query.from_user.id, koef_message(code, k))
        await bot.send_message(callback_query.from_user.id, f'–ü–æ–¥—Å—á–µ—Ç —Å—Ç—Ä–∞—Ö–æ–≤–æ–π –ø—Ä–µ–º–∏–∏', reply_markup=kb.sp)
        save_k(k)
        print(sp)

    elif code == 'count_sp':
        print(sp)
        await bot.send_message(callback_query.from_user.id, f'–°—Ç—Ä–∞—Ö–æ–≤–∞—è –ø—Ä–µ–º–∏—è - {180*sp[0]*sp[1]*sp[2]*sp[3]*sp[4]*sp[5]} –≥—Ä–Ω.')

    elif code == 'dogovora':
        await bot.send_message(callback_query.from_user.id, f'–í—ã–±–µ—Ä–∏ –¥–æ–≥–æ–≤–æ—Ä —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è', reply_markup=kb.choose_dog)

    elif code == 'dog_1':
        f = open('dogovor/dog1.doc', 'rb')
        await bot.send_document(callback_query.from_user.id, f, caption='–î–æ–≥–æ–≤–æ—Ä 1')
        time.sleep(3)
    elif code == 'dog_2':
        f = open('dogovor/dog2.doc', 'rb')
        await bot.send_document(callback_query.from_user.id, f, caption='–î–æ–≥–æ–≤–æ—Ä 2')
        time.sleep(3)
    elif code == 'dog_3':
        f = open('dogovor/dog3.doc', 'rb')
        await bot.send_document(callback_query.from_user.id, f, caption= '–î–æ–≥–æ–≤–æ—Ä 3')
        time.sleep(3)


    return



'''@dp.message_handler(commands=['test'])
async def find_file_ids(message: types.Message):

    for file in os.listdir('dogovor/'):
        if file.split('.')[-1] == 'doc':
            f = open('dogovor/'+file, 'rb')
            user_id = message.from_user.id
            await bot.send_document(message.chat.id, f,None)
            #bot.send_message(message.chat.id, msg.)
            #msg = bot.send_voice(message.chat.id, f, None)
            # –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤–∏–º –≤—Å–ª–µ–¥ –∑–∞ —Ñ–∞–π–ª–æ–º –µ–≥–æ file_id
            #bot.send_message(message.chat.id, msg.voice.file_id, reply_to_message_id=msg.message_id)
        time.sleep(3)'''




def save_k(k):
    sp.append(k)






###########DataBase#############





##########################################################################################################
@dp.callback_query_handler(func=lambda c: c.data)# and c.data.startswith('btn'))
async def process_callback_kb1btn1(callback_query: types.CallbackQuery):
    code = callback_query.data[0:]
    if code.isdigit():
        code = int(code)
    if code == 2:
        await bot.answer_callback_query(callback_query.id, text='–ù–∞–∂–∞—Ç–∞ –≤—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞')
    elif code == 5:
        await bot.answer_callback_query(
            callback_query.id,
            text='–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å –Ω–æ–º–µ—Ä–æ–º 5.\n–ê —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–æ–π –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤ üòâ', show_alert=True)
    else:
        await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, f'–ù–∞–∂–∞—Ç–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞! code={code}')


@dp.message_handler(commands=['2'])
async def process_command_2(message: types.Message):
    await message.reply("–û—Ç–ø—Ä–∞–≤–ª—è—é –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏", reply_markup=kb.inline_kb_full)


if __name__ == '__main__':
    executor.start_polling(dp)
